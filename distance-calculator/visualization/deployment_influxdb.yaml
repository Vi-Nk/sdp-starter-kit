apiVersion: v1
kind: Service
metadata:
  name: monitoring-influxdb
  labels:
    app: influxdb
spec:
  ports:
    - name: http
      port: 8083
      targetPort: 8083
    - name: api
      port: 8086
      targetPort: 8086
  selector:
    app: influxdb
---
apiVersion: v1
kind: Secret
metadata:
  name: influxdb-creds
type: Opaque
data:
  INFLUXDB_DB: c2hhcmt0YW5rCg==
  INFLUXDB_HOST: aW5mbHV4ZGI=
  INFLUXDB_PASSWORD: cm9vdA==
  INFLUXDB_USERNAME: cm9vdA==
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: influxdb
  name: influxdb
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
  creationTimestamp: null
  generation: 1
  labels:
    app: influxdb
  name: influxdb
  selfLink: /apis/extensions/v1beta1/namespaces/defult/deployments/influxdb
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: influxdb
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: influxdb
    spec:
      containers:
        - name: influxdb
          envFrom:
          - secretRef:
              name: influxdb-creds
          image: docker.io/influxdb:latest
          imagePullPolicy: IfNotPresent
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/influxdb
            name: var-lib-influxdb
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: var-lib-influxdb
        persistentVolumeClaim:
          claimName: influxdb
