/*
 * Copyright (c) 2017 Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 */
plugins {
    id 'com.github.johnrengelman.shadow'
}

apply plugin: "java"
apply plugin: "maven"
apply plugin: "application"
apply plugin: "maven-publish"

group "com.dellemc.appdev.starterkit.distance-calculator"

version = 4.0
archivesBaseName = "calculator"
description = "calculator"
mainClassName = "io.pravega.flinkapp.DistanceCalculator"
sourceCompatibility = 11
targetCompatibility = 11


repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://repository.apache.org/snapshots"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "https://oss.jfrog.org/jfrog-dependencies"
    }
}

dependencies {
    // Note that we must include the Elasticsearch client early in the classpath to avoid Netty version conflicts.
    compile "io.pravega:pravega-connectors-flink-1.9_2.12:${pravegaFlinkConnectorVersion}"
    compile "org.apache.flink:flink-streaming-java_2.12:${flinkVersion}"
    compile "org.apache.flink:flink-streaming-scala_2.12:${flinkVersion}"
    compile "org.apache.flink:flink-ml_2.12:${flinkVersion}"
    compile "io.pravega:pravega-client:${pravegaVersion}"

    // common-library dependencies
    compile "com.google.guava:guava:20.0"
    compile 'org.mongodb:mongo-java-driver:3.10.2'
    compile "org.xerial:sqlite-jdbc:3.20.0"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.1"


    compile 'org.influxdb:influxdb-java:2.15'
    testCompile "org.apache.flink:flink-test-utils_2.11:${flinkVersion}"
}

task startJSONReader(type: JavaExec) {
    main = "io.pravega.flinkapp.DistanceCalculator"
    classpath = sourceSets.main.runtimeClasspath
    if(System.getProperty("exec.args") != null) {
        args System.getProperty("exec.args").split()
    }
}

jar {
    zip64 true
    manifest {
        attributes "Main-Class": mainClassName
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

shadowJar {
    dependencies {
        exclude(dependency("org.scala-lang:scala-library"))
        exclude(dependency("org.scala-lang:scala-reflect"))
        exclude(dependency("org.scala-lang:scala-compiler"))
    }

    classifier = ""
    zip64 true
}

distributions {
    main {
        baseName = archivesBaseName
        contents {
            into("lib") {
                from shadowJar
                from(project.configurations.shadow)
            }
        }
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username "nautilus"
                password "password"
            }
            url = "http://localhost:9091/maven2"
        }
    }

    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}